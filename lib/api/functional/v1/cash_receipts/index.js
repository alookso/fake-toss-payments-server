"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.cancel = exports.store = void 0;
/**
 * @packageDocumentation
 * @module api.functional.v1.cash_receipts
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
var nestia_fetcher_1 = require("nestia-fetcher");
/**
 * 현금 영수증 발행하기.
 *
 * @param connection connection Information of the remote HTTP(s) server with headers (+encryption password)
 * @param input 입력 정보
 * @returns 현금 영수증 정보
 * @author Jeongho Nam - https://github.com/samchon
 *
 * @controller FakeTossCashReceiptsController.store()
 * @path POST /v1/cash-receipts
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
function store(connection, input) {
    return nestia_fetcher_1.Fetcher.fetch(connection, store.ENCRYPTED, store.METHOD, store.path(), input);
}
exports.store = store;
(function (store) {
    store.METHOD = "POST";
    store.PATH = "/v1/cash-receipts";
    store.ENCRYPTED = {
        request: false,
        response: false,
    };
    function path() {
        return "/v1/cash-receipts";
    }
    store.path = path;
})(store = exports.store || (exports.store = {}));
/**
 * 현금 영수증 취소하기.
 *
 * @param connection connection Information of the remote HTTP(s) server with headers (+encryption password)
 * @param receiptKey 현금 영수증의 {@link ITossCashReceipt.receiptKey}
 * @param input 취소 입력 정보
 * @returns 취소된 현금 영수증 정보
 * @author Jeongho Nam - https://github.com/samchon
 *
 * @controller FakeTossCashReceiptsController.cancel()
 * @path POST /v1/cash-receipts/:receiptKey/cancel
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
function cancel(connection, receiptKey, input) {
    return nestia_fetcher_1.Fetcher.fetch(connection, cancel.ENCRYPTED, cancel.METHOD, cancel.path(receiptKey), input);
}
exports.cancel = cancel;
(function (cancel) {
    cancel.METHOD = "POST";
    cancel.PATH = "/v1/cash-receipts/:receiptKey/cancel";
    cancel.ENCRYPTED = {
        request: false,
        response: false,
    };
    function path(receiptKey) {
        return "/v1/cash-receipts/".concat(receiptKey, "/cancel");
    }
    cancel.path = path;
})(cancel = exports.cancel || (exports.cancel = {}));
//# sourceMappingURL=index.js.map