/**
 * @packageDocumentation
 * @module api.functional.v1.cash_receipts
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
import { Fetcher, Primitive } from "nestia-fetcher";
import type { IConnection } from "nestia-fetcher";
import type { ITossCashReceipt } from "./../../../structures/ITossCashReceipt";
/**
 * 현금 영수증 발행하기.
 *
 * @param connection connection Information of the remote HTTP(s) server with headers (+encryption password)
 * @param input 입력 정보
 * @returns 현금 영수증 정보
 * @author Jeongho Nam - https://github.com/samchon
 *
 * @controller FakeTossCashReceiptsController.store()
 * @path POST /v1/cash-receipts
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export declare function store(connection: IConnection, input: Primitive<store.Input>): Promise<store.Output>;
export declare namespace store {
    type Input = Primitive<ITossCashReceipt.IStore>;
    type Output = Primitive<ITossCashReceipt>;
    const METHOD: "POST";
    const PATH: string;
    const ENCRYPTED: Fetcher.IEncrypted;
    function path(): string;
}
/**
 * 현금 영수증 취소하기.
 *
 * @param connection connection Information of the remote HTTP(s) server with headers (+encryption password)
 * @param receiptKey 현금 영수증의 {@link ITossCashReceipt.receiptKey}
 * @param input 취소 입력 정보
 * @returns 취소된 현금 영수증 정보
 * @author Jeongho Nam - https://github.com/samchon
 *
 * @controller FakeTossCashReceiptsController.cancel()
 * @path POST /v1/cash-receipts/:receiptKey/cancel
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export declare function cancel(connection: IConnection, receiptKey: string, input: Primitive<cancel.Input>): Promise<cancel.Output>;
export declare namespace cancel {
    type Input = Primitive<ITossCashReceipt.ICancel>;
    type Output = Primitive<ITossCashReceipt>;
    const METHOD: "POST";
    const PATH: string;
    const ENCRYPTED: Fetcher.IEncrypted;
    function path(receiptKey: string): string;
}
