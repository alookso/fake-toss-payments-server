"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.at = exports.card = void 0;
/**
 * @packageDocumentation
 * @module api.functional.v1.billing.authorizations
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
var nestia_fetcher_1 = require("nestia-fetcher");
exports.card = __importStar(require("./card"));
/**
 * 간편 결제로 등록한 수단 조회하기.
 *
 * `billing.authorizations.at` 은 고객이 간편 결제를 위하여 토스 페이먼츠 서버에
 * 등록한 결제 수단을 조회하는 함수이다.
 *
 * 주로 클라이언트 어플리케이션이 토스 페이먼츠가 자체적으로 제공하는 결제 창을 사용하는
 * 경우, 그래서 프론트 어플리케이션이 귀하의 백엔드 서버에 `billingKey` 와` customerKey`
 * 만을 전달해주어, 상세 간편 결제 수단 정보가 필요할 때 사용한다.
 *
 * @param connection connection Information of the remote HTTP(s) server with headers (+encryption password)
 * @param billingKey 대상 정보의 {@link ITossBilling.billingKey}
 * @param input 고객 식별자 키
 * @returns 간편 결제 수단 정보
 * @author Jeongho Nam - https://github.com/samchon
 *
 * @controller FakeTossBillingController.at()
 * @path POST /v1/billing/authorizations/:billingKey
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
function at(connection, billingKey, input) {
    return nestia_fetcher_1.Fetcher.fetch(connection, at.ENCRYPTED, at.METHOD, at.path(billingKey), input);
}
exports.at = at;
(function (at) {
    at.METHOD = "POST";
    at.PATH = "/v1/billing/authorizations/:billingKey";
    at.ENCRYPTED = {
        request: false,
        response: false,
    };
    function path(billingKey) {
        return "/v1/billing/authorizations/".concat(billingKey);
    }
    at.path = path;
})(at = exports.at || (exports.at = {}));
//# sourceMappingURL=index.js.map